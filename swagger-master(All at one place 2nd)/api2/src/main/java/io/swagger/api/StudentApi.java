/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Student;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-05-25T16:19:01.549Z[GMT]")
@Api(value = "student", description = "the student API")
public interface StudentApi {

    @ApiOperation(value = "adds an Student detail", nickname = "addStudent", notes = "Adds an Student to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "student created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "student already exists") })
    @RequestMapping(value = "/student",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addStudent(@ApiParam(value = "Student to add"  )  @Valid @RequestBody Student body);


    @ApiOperation(value = "adds an Student detail", nickname = "deleteStudent", notes = "Delete an Student to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "student deleted"),
        @ApiResponse(code = 400, message = "invalid input, object invalid") })
    @RequestMapping(value = "/student",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteStudent(@ApiParam(value = "pass an optional search string for looking up student") @Valid @RequestParam(value = "searchString", required = false) String searchString);


    @ApiOperation(value = "searches student", nickname = "searchStudent", notes = "By passing in the appropriate options, you can search for available product in the system ", response = Student.class, responseContainer = "List", tags={ "developers", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "search results matching criteria", response = Student.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/student",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Student>> searchStudent(@ApiParam(value = "pass an optional search string for looking up student") @Valid @RequestParam(value = "searchString", required = false) String searchString);


    @ApiOperation(value = "update an Student detail", nickname = "updateStudent", notes = "Update an Student to the system", tags={ "admins", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "student updated"),
        @ApiResponse(code = 400, message = "invalid input, object invalid") })
    @RequestMapping(value = "/student",
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<Void> updateStudent(@ApiParam(value = "Student to Update"  )  @Valid @RequestBody Student body,@ApiParam(value = "pass an optional search string for looking up student") @Valid @RequestParam(value = "searchString", required = false) String searchString);

}
